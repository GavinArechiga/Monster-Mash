//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Player Controller/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Starting Action Map"",
            ""id"": ""4e7ab292-a22f-47d2-a4fd-78a5ed880541"",
            ""actions"": [
                {
                    ""name"": ""Enter Game - Controller Map"",
                    ""type"": ""Button"",
                    ""id"": ""e2d86e18-7529-4731-bff1-715cf6012fa5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""82868def-e6a5-4e6b-8617-4ef5934675f9"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2cf1efb-e720-4788-a284-b420acc370e4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64569b79-795a-4a4d-a46d-61bf30dec751"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""744d660f-cb31-43c5-8278-2db20e2ed5ec"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da0e2159-24f5-4b63-a6ad-85e156efdf29"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06eda489-dfde-41e6-9a32-b5e11e8f44be"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a9a5ea3-6c57-40cb-a42b-b3acea0a5eba"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92508b12-b615-42ed-96b1-6d948adb4bac"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d90722f9-fe28-482a-95e2-630fed74eb44"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00a3fce8-cb59-4a44-8ab3-16c0f5302ba5"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI Controls"",
            ""id"": ""a0ac660d-8f87-4828-933e-ac4af02b3e3d"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7b13cdd7-4397-4f62-b01e-2d77bad62756"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""882e4ab3-bbe2-42ee-b9ab-e4c1c2df1136"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""2e5c6021-55cb-4b9c-992c-7846b83cdc6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d9f2c1cd-6d3d-4c61-9eed-b6270e9b5bf4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3b63101f-8df9-4e5d-9dbe-9dc1941ee114"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1d01a8b6-50b5-400e-8379-13306abe23ab"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fe4b726a-7aa5-4a6c-8197-427fb1a4c6f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f84d9437-0bbf-43db-a9ab-8684058b0ca5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fa723524-9af9-43f2-97e2-239c5f17aa8f"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""43b7aa08-7a12-427a-bc38-7c3a3123d22b"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""cecac8c8-8cf7-40c3-a3ea-b9d99d381f34"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""35408ccd-b7db-41b6-af4c-fbe6fa96fb32"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a2972e6f-81c9-48e6-9833-1c2fcbf1feea"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a8e760c7-1cd0-4f5e-a8e1-eb1ff48e4af3"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""852f561c-a0e7-463d-8022-6c39d82e5d5b"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cf9b778c-8f33-4254-8a72-cc68fadbaf57"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d9af1495-beb0-4507-a4c1-94565d856240"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""df4c18ad-19eb-4b83-84eb-f1fdda5a2c7a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""17ab75b6-0af7-40ba-b239-e9577988a595"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""934f43f2-11de-4539-a28d-42f4e544cf40"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""786e9179-2305-4171-a8f1-7ff5fc1a9cbd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""64e77d76-d72c-4080-b81b-ddc4a803cf2d"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""38fd2d06-8e7f-4df6-8e2c-7842db658dc2"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ff5ea37f-6384-4778-89f1-9fade52f3d51"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""78833def-2db9-485e-a520-f18c4812ab51"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""8eb56af3-ba8b-4428-a335-08fb9d1fed8b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c382768f-5171-4d5e-afef-3394bb4d6ce9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""121d75ac-56df-4872-9d7e-029a3b239372"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b9fa2992-a899-4325-afeb-8337f6150932"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b6c4088a-9159-4957-a6fb-12be4a9c657c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9039e536-9d51-4ccf-a2ec-940b4dfe085e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3805d2a6-6e22-477e-a407-b0d6905b7712"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""98333df4-5d4f-47b6-9e92-dd0bf2214844"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""62a5e846-5180-4198-a662-6963ba877e9f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""276e17cc-3e77-43b2-aca8-01667748fd13"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b1d05443-a84d-4151-a228-501bb93d20ad"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f3cadce4-4a63-46ae-b7e2-61b1c8186938"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ef18b66d-d1c2-42c8-9463-5561cba5380a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""99f608a6-e09c-415a-b887-beec8aaceec6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8b416332-99f7-4aec-92ed-bd3f80a7fb40"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d3a7873-3197-4ae3-8262-f198781580af"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9364e866-88e9-4be5-86aa-ded896192543"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""caed3759-3a51-45d0-b209-b029ce8ca14e"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d7d6956-6176-4fb8-a2d3-fdc40760739d"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6011a46-f7cf-437f-90e3-568b7e61709f"",
                    ""path"": ""<VirtualMouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9991ecb3-12d6-4c49-ab89-09b941a90aa8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b48a60a-95ca-4fc2-a8c3-58eab8c31786"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e926df4-61e7-4b77-a2e0-a21e8eeaddbd"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4258ad0a-cd62-40a2-b9b7-bd1e8406ef20"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""660e32f9-03a3-49c7-a19a-02df6ad8c404"",
                    ""path"": ""<VirtualMouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e05a6fc8-0adf-4fa2-99c4-18e5b0dbe46e"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b2fcf44-8cb2-4450-a025-419568f0601c"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f3a489e-0b49-4afe-9bd5-985e575fba47"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4e3bf22-7a93-4bf2-bb63-4f0efd838faf"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34401bb3-e170-486e-a30c-2e8eb4f46595"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Monster Controls"",
            ""id"": ""b44544cc-225f-4261-8c6d-b452ba0e7943"",
            ""actions"": [
                {
                    ""name"": ""Left Stick"",
                    ""type"": ""Value"",
                    ""id"": ""20d73ea1-c242-47d4-9f61-e1b8668f6fec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right Stick"",
                    ""type"": ""Value"",
                    ""id"": ""a397b105-6e4e-4480-9244-19f1a759ce1c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""0931720f-ac71-4b1e-b0b8-a818a6cd45dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""3cdc195f-374b-492e-b773-50b25549cc67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""0a25f797-3bf3-4573-b7e0-963dc732dc10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y"",
                    ""type"": ""Button"",
                    ""id"": ""a7810095-ed16-4c5c-a33d-f05b0488cf7d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""8ca17604-be3d-4604-b3cf-55b28d679d51"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1c1efe38-c56b-4ada-bd51-4bfd5d65e748"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""595a6d63-d868-4800-a41a-663acd546da3"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8d9b5080-91f1-4eed-96b8-0bae561ec886"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7ad42e02-6f85-4390-9a29-5bdee84bf9f1"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""f0f8e462-d0c2-49e7-a456-8cbf2f72e20d"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""42ad19b4-537f-496f-bd5c-c044b87f0fcf"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dc2a17b8-0cdc-4b13-a39d-a6125b1238cb"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a265b2d3-4424-4da0-bd52-34876b55812c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6d6838d3-a2fc-4ab4-9fdf-4d6f676c7586"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fef9c2c6-ba7a-4423-b329-5c529de37c7b"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bad41e0e-7bc3-484e-ae95-d44384f7b50e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed8ccd9a-e6f1-4580-bb25-8a414ee3f99f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2145679d-3a72-4863-ba96-a2da28adacbb"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI Navagation"",
            ""id"": ""6a8b4c9a-c871-47c4-a153-ebb68dce652a"",
            ""actions"": [
                {
                    ""name"": ""Move Cursor  - Generic Gamepad"",
                    ""type"": ""Value"",
                    ""id"": ""28fc63e2-0537-4a31-aff6-d3349e015b55"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select Action - Generic Gamepad"",
                    ""type"": ""Button"",
                    ""id"": ""5490c4d2-a3f5-430f-ac02-28e23fd92b5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Deselect Action - Generic Gamepad"",
                    ""type"": ""Button"",
                    ""id"": ""9690badf-b577-40b4-9c65-35062d17db04"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start Game - Generic Gamepad"",
                    ""type"": ""Button"",
                    ""id"": ""b122a2ff-7766-46e9-b57d-fa9e147f3d58"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowMenu"",
                    ""type"": ""Button"",
                    ""id"": ""04917842-53ea-493a-971b-255cbdcfcb43"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ae68aca2-e405-4a48-b4bf-4e35a1066e52"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Move Cursor  - Generic Gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""010f86f2-7115-42f3-a147-1c0d3c987410"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move Cursor  - Generic Gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c0f8ef3-3c1a-46d3-ad26-ba35c0b01c45"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Start Game - Generic Gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1346c2d6-e559-471a-91e7-a067925d933b"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Start Game - Generic Gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ddab4835-b877-4d91-affb-2a907e30162f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Select Action - Generic Gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a0c0e7c-7b16-4acf-ac62-a95052fc5f0f"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Select Action - Generic Gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1873ffd8-668b-4356-a944-35c6a0ff041e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Deselect Action - Generic Gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cef4363e-6901-46f6-be86-5e01405c8d58"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Deselect Action - Generic Gamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f0f5809-0b98-4d68-b011-39383eabd34a"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""ShowMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BuildAScare-DirectControl"",
            ""id"": ""0b0a67de-4228-4302-b154-18acdf5f71c9"",
            ""actions"": [
                {
                    ""name"": ""Part Locomotion"",
                    ""type"": ""Value"",
                    ""id"": ""8a83951d-ac41-485e-8f14-1c99cbb44fb9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Open Part Selector"",
                    ""type"": ""Button"",
                    ""id"": ""5a006166-6a9f-4755-8bac-6aaba08be594"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate - Left"",
                    ""type"": ""Button"",
                    ""id"": ""785f531e-1180-4266-ba8f-d6d0af3bc2bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Snap - Left"",
                    ""type"": ""Button"",
                    ""id"": ""96c5930c-adaf-4f58-ba34-d8ed6f009f2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate - Right"",
                    ""type"": ""Button"",
                    ""id"": ""b0edcd11-b401-4d30-ad7f-5a4cd5c7e163"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Snap - Right"",
                    ""type"": ""Button"",
                    ""id"": ""df490237-953f-42f9-baef-3c247c8aaff5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select - Left"",
                    ""type"": ""Button"",
                    ""id"": ""c14be819-6e33-4e33-a29a-3974e9e633df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select - Right"",
                    ""type"": ""Button"",
                    ""id"": ""9ba6e9b4-e9ff-4a3b-a1ff-9c63bc7e436a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom - In"",
                    ""type"": ""Button"",
                    ""id"": ""bd142157-a82c-441e-bd7b-f41c565274a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom - Out"",
                    ""type"": ""Button"",
                    ""id"": ""2bc0d053-6537-40d4-a3e5-dc0be332e2e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Confirm"",
                    ""type"": ""Button"",
                    ""id"": ""960cb01b-00a9-4ad8-bc84-49774e68c9b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""ab2dacae-84a1-4fe3-ac3b-33fbf0924df4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Toggle"",
                    ""type"": ""Button"",
                    ""id"": ""866522e7-6089-4be4-bd76-1569dcf0dac9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryToggle"",
                    ""type"": ""Button"",
                    ""id"": ""72e7d0f8-9f57-4700-9a98-1c57520938a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""537efb54-4e2c-4d8b-a86d-387384143fdf"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Part Locomotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""468eac25-e92a-4133-98ee-27b9a7db3fd0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Part Locomotion"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""18b0fdce-7fda-4eb3-9dce-70f484910a23"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Part Locomotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d6e5b60a-74cf-4fcc-88b7-f9cd3f037ee9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Part Locomotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""476fd109-5831-4892-ad4f-2db1f1a26aa8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Part Locomotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0b2d26f6-aba5-4fda-98be-dba04d47d1c5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Part Locomotion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fd2655dd-8bc8-4881-8ec9-17fb9bf61eac"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Open Part Selector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14a1cb14-e02a-4ea3-8199-43a6c7a5d00f"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Open Part Selector"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da3d6b9c-55f2-4ff4-a317-11340cd8857d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Rotate - Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59a2af22-db12-4f40-a9f1-cc9dab81e0f8"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Rotate - Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0996252-e7b6-409e-a764-c0b1107a39d5"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Zoom - In"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""409fbe2d-b584-446b-8bf2-878d2f0ae565"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Zoom - Out"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70e20e23-6e3e-4154-867b-d5d859dd91ff"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Confirm"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6a88b25-0061-4ceb-910a-80f41a241783"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77f83e43-05d2-49b4-a51b-a07da322a92a"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Toggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2991ecfc-ac2f-423b-b0c6-d4df12c740c8"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""SecondaryToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73f8a2c7-c4d5-468e-8e9b-62bc7ce2c006"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Select - Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b55bcfcf-76bf-42c8-906a-862b757a0361"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Select - Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""982a8175-e46c-4d46-9546-578f7f37c85f"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Select - Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfc81984-3ea3-44f5-ac46-b0634af9ca9c"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Select - Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62a8770d-62fc-4073-b331-58ad6e4e4bf2"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Select - Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f129cf34-1832-4e28-b461-e66f68562f25"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Select - Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7f3c00a-eeb6-412a-acb5-e54fb480ad33"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Snap - Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4e1b0d8-45f3-4f80-b3c0-e2165c6eaac7"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Snap - Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BuildAScare-DragAndDrop"",
            ""id"": ""0c90aeb5-2800-4f6e-a050-5ab3b8929c08"",
            ""actions"": [
                {
                    ""name"": ""Cursor Movement"",
                    ""type"": ""Value"",
                    ""id"": ""97f1dd56-33e8-492a-b643-1546143298bb"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9ec1026a-fda7-43c0-bbd0-73b21e7260af"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Cursor Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f75d1df-98d9-4202-b286-81263b693f4b"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Cursor Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Emotes"",
            ""id"": ""5e084b5f-4876-462b-be77-9344c143f440"",
            ""actions"": [
                {
                    ""name"": ""Emote 1"",
                    ""type"": ""Button"",
                    ""id"": ""8bf68b1a-bf95-4e67-a3c0-5ad57b2d158a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Emote 2"",
                    ""type"": ""Button"",
                    ""id"": ""ccd9d835-b420-4f7b-98ea-bbb627ac0b0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Emote 3"",
                    ""type"": ""Button"",
                    ""id"": ""ce58b017-342d-4d67-b2c1-1bba9c7259ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Emote 4"",
                    ""type"": ""Button"",
                    ""id"": ""4af455ae-2aae-471f-b62b-d2dedc2a93fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""dfeb061c-ed9c-475a-b6d0-3a5f9ce269e9"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Emote 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03585554-835a-4fa9-9f9b-f4c1c004686b"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Emote 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5a0ab0b7-65e0-4805-baa1-fadb58429442"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Emote 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""739e8cb9-9566-4ea2-a5fa-5184804aba06"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Emote 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""AllGamepads"",
            ""bindingGroup"": ""AllGamepads"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<VirtualMouse>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Starting Action Map
        m_StartingActionMap = asset.FindActionMap("Starting Action Map", throwIfNotFound: true);
        m_StartingActionMap_EnterGameControllerMap = m_StartingActionMap.FindAction("Enter Game - Controller Map", throwIfNotFound: true);
        // UI Controls
        m_UIControls = asset.FindActionMap("UI Controls", throwIfNotFound: true);
        m_UIControls_Navigate = m_UIControls.FindAction("Navigate", throwIfNotFound: true);
        m_UIControls_Submit = m_UIControls.FindAction("Submit", throwIfNotFound: true);
        m_UIControls_Cancel = m_UIControls.FindAction("Cancel", throwIfNotFound: true);
        m_UIControls_Point = m_UIControls.FindAction("Point", throwIfNotFound: true);
        m_UIControls_Click = m_UIControls.FindAction("Click", throwIfNotFound: true);
        m_UIControls_ScrollWheel = m_UIControls.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UIControls_MiddleClick = m_UIControls.FindAction("MiddleClick", throwIfNotFound: true);
        m_UIControls_RightClick = m_UIControls.FindAction("RightClick", throwIfNotFound: true);
        m_UIControls_TrackedDevicePosition = m_UIControls.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UIControls_TrackedDeviceOrientation = m_UIControls.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        // Monster Controls
        m_MonsterControls = asset.FindActionMap("Monster Controls", throwIfNotFound: true);
        m_MonsterControls_LeftStick = m_MonsterControls.FindAction("Left Stick", throwIfNotFound: true);
        m_MonsterControls_RightStick = m_MonsterControls.FindAction("Right Stick", throwIfNotFound: true);
        m_MonsterControls_A = m_MonsterControls.FindAction("A", throwIfNotFound: true);
        m_MonsterControls_B = m_MonsterControls.FindAction("B", throwIfNotFound: true);
        m_MonsterControls_X = m_MonsterControls.FindAction("X", throwIfNotFound: true);
        m_MonsterControls_Y = m_MonsterControls.FindAction("Y", throwIfNotFound: true);
        // UI Navagation
        m_UINavagation = asset.FindActionMap("UI Navagation", throwIfNotFound: true);
        m_UINavagation_MoveCursorGenericGamepad = m_UINavagation.FindAction("Move Cursor  - Generic Gamepad", throwIfNotFound: true);
        m_UINavagation_SelectActionGenericGamepad = m_UINavagation.FindAction("Select Action - Generic Gamepad", throwIfNotFound: true);
        m_UINavagation_DeselectActionGenericGamepad = m_UINavagation.FindAction("Deselect Action - Generic Gamepad", throwIfNotFound: true);
        m_UINavagation_StartGameGenericGamepad = m_UINavagation.FindAction("Start Game - Generic Gamepad", throwIfNotFound: true);
        m_UINavagation_ShowMenu = m_UINavagation.FindAction("ShowMenu", throwIfNotFound: true);
        // BuildAScare-DirectControl
        m_BuildAScareDirectControl = asset.FindActionMap("BuildAScare-DirectControl", throwIfNotFound: true);
        m_BuildAScareDirectControl_PartLocomotion = m_BuildAScareDirectControl.FindAction("Part Locomotion", throwIfNotFound: true);
        m_BuildAScareDirectControl_OpenPartSelector = m_BuildAScareDirectControl.FindAction("Open Part Selector", throwIfNotFound: true);
        m_BuildAScareDirectControl_RotateLeft = m_BuildAScareDirectControl.FindAction("Rotate - Left", throwIfNotFound: true);
        m_BuildAScareDirectControl_SnapLeft = m_BuildAScareDirectControl.FindAction("Snap - Left", throwIfNotFound: true);
        m_BuildAScareDirectControl_RotateRight = m_BuildAScareDirectControl.FindAction("Rotate - Right", throwIfNotFound: true);
        m_BuildAScareDirectControl_SnapRight = m_BuildAScareDirectControl.FindAction("Snap - Right", throwIfNotFound: true);
        m_BuildAScareDirectControl_SelectLeft = m_BuildAScareDirectControl.FindAction("Select - Left", throwIfNotFound: true);
        m_BuildAScareDirectControl_SelectRight = m_BuildAScareDirectControl.FindAction("Select - Right", throwIfNotFound: true);
        m_BuildAScareDirectControl_ZoomIn = m_BuildAScareDirectControl.FindAction("Zoom - In", throwIfNotFound: true);
        m_BuildAScareDirectControl_ZoomOut = m_BuildAScareDirectControl.FindAction("Zoom - Out", throwIfNotFound: true);
        m_BuildAScareDirectControl_Confirm = m_BuildAScareDirectControl.FindAction("Confirm", throwIfNotFound: true);
        m_BuildAScareDirectControl_Back = m_BuildAScareDirectControl.FindAction("Back", throwIfNotFound: true);
        m_BuildAScareDirectControl_Toggle = m_BuildAScareDirectControl.FindAction("Toggle", throwIfNotFound: true);
        m_BuildAScareDirectControl_SecondaryToggle = m_BuildAScareDirectControl.FindAction("SecondaryToggle", throwIfNotFound: true);
        // BuildAScare-DragAndDrop
        m_BuildAScareDragAndDrop = asset.FindActionMap("BuildAScare-DragAndDrop", throwIfNotFound: true);
        m_BuildAScareDragAndDrop_CursorMovement = m_BuildAScareDragAndDrop.FindAction("Cursor Movement", throwIfNotFound: true);
        // Emotes
        m_Emotes = asset.FindActionMap("Emotes", throwIfNotFound: true);
        m_Emotes_Emote1 = m_Emotes.FindAction("Emote 1", throwIfNotFound: true);
        m_Emotes_Emote2 = m_Emotes.FindAction("Emote 2", throwIfNotFound: true);
        m_Emotes_Emote3 = m_Emotes.FindAction("Emote 3", throwIfNotFound: true);
        m_Emotes_Emote4 = m_Emotes.FindAction("Emote 4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Starting Action Map
    private readonly InputActionMap m_StartingActionMap;
    private IStartingActionMapActions m_StartingActionMapActionsCallbackInterface;
    private readonly InputAction m_StartingActionMap_EnterGameControllerMap;
    public struct StartingActionMapActions
    {
        private @PlayerControls m_Wrapper;
        public StartingActionMapActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnterGameControllerMap => m_Wrapper.m_StartingActionMap_EnterGameControllerMap;
        public InputActionMap Get() { return m_Wrapper.m_StartingActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(StartingActionMapActions set) { return set.Get(); }
        public void SetCallbacks(IStartingActionMapActions instance)
        {
            if (m_Wrapper.m_StartingActionMapActionsCallbackInterface != null)
            {
                @EnterGameControllerMap.started -= m_Wrapper.m_StartingActionMapActionsCallbackInterface.OnEnterGameControllerMap;
                @EnterGameControllerMap.performed -= m_Wrapper.m_StartingActionMapActionsCallbackInterface.OnEnterGameControllerMap;
                @EnterGameControllerMap.canceled -= m_Wrapper.m_StartingActionMapActionsCallbackInterface.OnEnterGameControllerMap;
            }
            m_Wrapper.m_StartingActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @EnterGameControllerMap.started += instance.OnEnterGameControllerMap;
                @EnterGameControllerMap.performed += instance.OnEnterGameControllerMap;
                @EnterGameControllerMap.canceled += instance.OnEnterGameControllerMap;
            }
        }
    }
    public StartingActionMapActions @StartingActionMap => new StartingActionMapActions(this);

    // UI Controls
    private readonly InputActionMap m_UIControls;
    private IUIControlsActions m_UIControlsActionsCallbackInterface;
    private readonly InputAction m_UIControls_Navigate;
    private readonly InputAction m_UIControls_Submit;
    private readonly InputAction m_UIControls_Cancel;
    private readonly InputAction m_UIControls_Point;
    private readonly InputAction m_UIControls_Click;
    private readonly InputAction m_UIControls_ScrollWheel;
    private readonly InputAction m_UIControls_MiddleClick;
    private readonly InputAction m_UIControls_RightClick;
    private readonly InputAction m_UIControls_TrackedDevicePosition;
    private readonly InputAction m_UIControls_TrackedDeviceOrientation;
    public struct UIControlsActions
    {
        private @PlayerControls m_Wrapper;
        public UIControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UIControls_Navigate;
        public InputAction @Submit => m_Wrapper.m_UIControls_Submit;
        public InputAction @Cancel => m_Wrapper.m_UIControls_Cancel;
        public InputAction @Point => m_Wrapper.m_UIControls_Point;
        public InputAction @Click => m_Wrapper.m_UIControls_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UIControls_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UIControls_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UIControls_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UIControls_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UIControls_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UIControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIControlsActions set) { return set.Get(); }
        public void SetCallbacks(IUIControlsActions instance)
        {
            if (m_Wrapper.m_UIControlsActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
            }
            m_Wrapper.m_UIControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
            }
        }
    }
    public UIControlsActions @UIControls => new UIControlsActions(this);

    // Monster Controls
    private readonly InputActionMap m_MonsterControls;
    private IMonsterControlsActions m_MonsterControlsActionsCallbackInterface;
    private readonly InputAction m_MonsterControls_LeftStick;
    private readonly InputAction m_MonsterControls_RightStick;
    private readonly InputAction m_MonsterControls_A;
    private readonly InputAction m_MonsterControls_B;
    private readonly InputAction m_MonsterControls_X;
    private readonly InputAction m_MonsterControls_Y;
    public struct MonsterControlsActions
    {
        private @PlayerControls m_Wrapper;
        public MonsterControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftStick => m_Wrapper.m_MonsterControls_LeftStick;
        public InputAction @RightStick => m_Wrapper.m_MonsterControls_RightStick;
        public InputAction @A => m_Wrapper.m_MonsterControls_A;
        public InputAction @B => m_Wrapper.m_MonsterControls_B;
        public InputAction @X => m_Wrapper.m_MonsterControls_X;
        public InputAction @Y => m_Wrapper.m_MonsterControls_Y;
        public InputActionMap Get() { return m_Wrapper.m_MonsterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MonsterControlsActions set) { return set.Get(); }
        public void SetCallbacks(IMonsterControlsActions instance)
        {
            if (m_Wrapper.m_MonsterControlsActionsCallbackInterface != null)
            {
                @LeftStick.started -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnLeftStick;
                @LeftStick.performed -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnLeftStick;
                @LeftStick.canceled -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnLeftStick;
                @RightStick.started -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnRightStick;
                @RightStick.performed -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnRightStick;
                @RightStick.canceled -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnRightStick;
                @A.started -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnA;
                @B.started -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnB;
                @B.performed -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnB;
                @B.canceled -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnB;
                @X.started -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnX;
                @X.performed -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnX;
                @X.canceled -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnX;
                @Y.started -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnY;
                @Y.performed -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnY;
                @Y.canceled -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnY;
            }
            m_Wrapper.m_MonsterControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftStick.started += instance.OnLeftStick;
                @LeftStick.performed += instance.OnLeftStick;
                @LeftStick.canceled += instance.OnLeftStick;
                @RightStick.started += instance.OnRightStick;
                @RightStick.performed += instance.OnRightStick;
                @RightStick.canceled += instance.OnRightStick;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @B.started += instance.OnB;
                @B.performed += instance.OnB;
                @B.canceled += instance.OnB;
                @X.started += instance.OnX;
                @X.performed += instance.OnX;
                @X.canceled += instance.OnX;
                @Y.started += instance.OnY;
                @Y.performed += instance.OnY;
                @Y.canceled += instance.OnY;
            }
        }
    }
    public MonsterControlsActions @MonsterControls => new MonsterControlsActions(this);

    // UI Navagation
    private readonly InputActionMap m_UINavagation;
    private IUINavagationActions m_UINavagationActionsCallbackInterface;
    private readonly InputAction m_UINavagation_MoveCursorGenericGamepad;
    private readonly InputAction m_UINavagation_SelectActionGenericGamepad;
    private readonly InputAction m_UINavagation_DeselectActionGenericGamepad;
    private readonly InputAction m_UINavagation_StartGameGenericGamepad;
    private readonly InputAction m_UINavagation_ShowMenu;
    public struct UINavagationActions
    {
        private @PlayerControls m_Wrapper;
        public UINavagationActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveCursorGenericGamepad => m_Wrapper.m_UINavagation_MoveCursorGenericGamepad;
        public InputAction @SelectActionGenericGamepad => m_Wrapper.m_UINavagation_SelectActionGenericGamepad;
        public InputAction @DeselectActionGenericGamepad => m_Wrapper.m_UINavagation_DeselectActionGenericGamepad;
        public InputAction @StartGameGenericGamepad => m_Wrapper.m_UINavagation_StartGameGenericGamepad;
        public InputAction @ShowMenu => m_Wrapper.m_UINavagation_ShowMenu;
        public InputActionMap Get() { return m_Wrapper.m_UINavagation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UINavagationActions set) { return set.Get(); }
        public void SetCallbacks(IUINavagationActions instance)
        {
            if (m_Wrapper.m_UINavagationActionsCallbackInterface != null)
            {
                @MoveCursorGenericGamepad.started -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnMoveCursorGenericGamepad;
                @MoveCursorGenericGamepad.performed -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnMoveCursorGenericGamepad;
                @MoveCursorGenericGamepad.canceled -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnMoveCursorGenericGamepad;
                @SelectActionGenericGamepad.started -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnSelectActionGenericGamepad;
                @SelectActionGenericGamepad.performed -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnSelectActionGenericGamepad;
                @SelectActionGenericGamepad.canceled -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnSelectActionGenericGamepad;
                @DeselectActionGenericGamepad.started -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnDeselectActionGenericGamepad;
                @DeselectActionGenericGamepad.performed -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnDeselectActionGenericGamepad;
                @DeselectActionGenericGamepad.canceled -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnDeselectActionGenericGamepad;
                @StartGameGenericGamepad.started -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnStartGameGenericGamepad;
                @StartGameGenericGamepad.performed -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnStartGameGenericGamepad;
                @StartGameGenericGamepad.canceled -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnStartGameGenericGamepad;
                @ShowMenu.started -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnShowMenu;
                @ShowMenu.performed -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnShowMenu;
                @ShowMenu.canceled -= m_Wrapper.m_UINavagationActionsCallbackInterface.OnShowMenu;
            }
            m_Wrapper.m_UINavagationActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveCursorGenericGamepad.started += instance.OnMoveCursorGenericGamepad;
                @MoveCursorGenericGamepad.performed += instance.OnMoveCursorGenericGamepad;
                @MoveCursorGenericGamepad.canceled += instance.OnMoveCursorGenericGamepad;
                @SelectActionGenericGamepad.started += instance.OnSelectActionGenericGamepad;
                @SelectActionGenericGamepad.performed += instance.OnSelectActionGenericGamepad;
                @SelectActionGenericGamepad.canceled += instance.OnSelectActionGenericGamepad;
                @DeselectActionGenericGamepad.started += instance.OnDeselectActionGenericGamepad;
                @DeselectActionGenericGamepad.performed += instance.OnDeselectActionGenericGamepad;
                @DeselectActionGenericGamepad.canceled += instance.OnDeselectActionGenericGamepad;
                @StartGameGenericGamepad.started += instance.OnStartGameGenericGamepad;
                @StartGameGenericGamepad.performed += instance.OnStartGameGenericGamepad;
                @StartGameGenericGamepad.canceled += instance.OnStartGameGenericGamepad;
                @ShowMenu.started += instance.OnShowMenu;
                @ShowMenu.performed += instance.OnShowMenu;
                @ShowMenu.canceled += instance.OnShowMenu;
            }
        }
    }
    public UINavagationActions @UINavagation => new UINavagationActions(this);

    // BuildAScare-DirectControl
    private readonly InputActionMap m_BuildAScareDirectControl;
    private IBuildAScareDirectControlActions m_BuildAScareDirectControlActionsCallbackInterface;
    private readonly InputAction m_BuildAScareDirectControl_PartLocomotion;
    private readonly InputAction m_BuildAScareDirectControl_OpenPartSelector;
    private readonly InputAction m_BuildAScareDirectControl_RotateLeft;
    private readonly InputAction m_BuildAScareDirectControl_SnapLeft;
    private readonly InputAction m_BuildAScareDirectControl_RotateRight;
    private readonly InputAction m_BuildAScareDirectControl_SnapRight;
    private readonly InputAction m_BuildAScareDirectControl_SelectLeft;
    private readonly InputAction m_BuildAScareDirectControl_SelectRight;
    private readonly InputAction m_BuildAScareDirectControl_ZoomIn;
    private readonly InputAction m_BuildAScareDirectControl_ZoomOut;
    private readonly InputAction m_BuildAScareDirectControl_Confirm;
    private readonly InputAction m_BuildAScareDirectControl_Back;
    private readonly InputAction m_BuildAScareDirectControl_Toggle;
    private readonly InputAction m_BuildAScareDirectControl_SecondaryToggle;
    public struct BuildAScareDirectControlActions
    {
        private @PlayerControls m_Wrapper;
        public BuildAScareDirectControlActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PartLocomotion => m_Wrapper.m_BuildAScareDirectControl_PartLocomotion;
        public InputAction @OpenPartSelector => m_Wrapper.m_BuildAScareDirectControl_OpenPartSelector;
        public InputAction @RotateLeft => m_Wrapper.m_BuildAScareDirectControl_RotateLeft;
        public InputAction @SnapLeft => m_Wrapper.m_BuildAScareDirectControl_SnapLeft;
        public InputAction @RotateRight => m_Wrapper.m_BuildAScareDirectControl_RotateRight;
        public InputAction @SnapRight => m_Wrapper.m_BuildAScareDirectControl_SnapRight;
        public InputAction @SelectLeft => m_Wrapper.m_BuildAScareDirectControl_SelectLeft;
        public InputAction @SelectRight => m_Wrapper.m_BuildAScareDirectControl_SelectRight;
        public InputAction @ZoomIn => m_Wrapper.m_BuildAScareDirectControl_ZoomIn;
        public InputAction @ZoomOut => m_Wrapper.m_BuildAScareDirectControl_ZoomOut;
        public InputAction @Confirm => m_Wrapper.m_BuildAScareDirectControl_Confirm;
        public InputAction @Back => m_Wrapper.m_BuildAScareDirectControl_Back;
        public InputAction @Toggle => m_Wrapper.m_BuildAScareDirectControl_Toggle;
        public InputAction @SecondaryToggle => m_Wrapper.m_BuildAScareDirectControl_SecondaryToggle;
        public InputActionMap Get() { return m_Wrapper.m_BuildAScareDirectControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildAScareDirectControlActions set) { return set.Get(); }
        public void SetCallbacks(IBuildAScareDirectControlActions instance)
        {
            if (m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface != null)
            {
                @PartLocomotion.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnPartLocomotion;
                @PartLocomotion.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnPartLocomotion;
                @PartLocomotion.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnPartLocomotion;
                @OpenPartSelector.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnOpenPartSelector;
                @OpenPartSelector.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnOpenPartSelector;
                @OpenPartSelector.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnOpenPartSelector;
                @RotateLeft.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnRotateLeft;
                @RotateLeft.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnRotateLeft;
                @RotateLeft.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnRotateLeft;
                @SnapLeft.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSnapLeft;
                @SnapLeft.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSnapLeft;
                @SnapLeft.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSnapLeft;
                @RotateRight.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnRotateRight;
                @RotateRight.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnRotateRight;
                @RotateRight.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnRotateRight;
                @SnapRight.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSnapRight;
                @SnapRight.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSnapRight;
                @SnapRight.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSnapRight;
                @SelectLeft.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSelectLeft;
                @SelectLeft.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSelectLeft;
                @SelectLeft.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSelectLeft;
                @SelectRight.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSelectRight;
                @SelectRight.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSelectRight;
                @SelectRight.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSelectRight;
                @ZoomIn.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnZoomIn;
                @ZoomIn.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnZoomIn;
                @ZoomIn.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnZoomIn;
                @ZoomOut.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnZoomOut;
                @ZoomOut.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnZoomOut;
                @ZoomOut.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnZoomOut;
                @Confirm.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnConfirm;
                @Confirm.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnConfirm;
                @Confirm.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnConfirm;
                @Back.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnBack;
                @Toggle.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnToggle;
                @Toggle.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnToggle;
                @Toggle.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnToggle;
                @SecondaryToggle.started -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSecondaryToggle;
                @SecondaryToggle.performed -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSecondaryToggle;
                @SecondaryToggle.canceled -= m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface.OnSecondaryToggle;
            }
            m_Wrapper.m_BuildAScareDirectControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PartLocomotion.started += instance.OnPartLocomotion;
                @PartLocomotion.performed += instance.OnPartLocomotion;
                @PartLocomotion.canceled += instance.OnPartLocomotion;
                @OpenPartSelector.started += instance.OnOpenPartSelector;
                @OpenPartSelector.performed += instance.OnOpenPartSelector;
                @OpenPartSelector.canceled += instance.OnOpenPartSelector;
                @RotateLeft.started += instance.OnRotateLeft;
                @RotateLeft.performed += instance.OnRotateLeft;
                @RotateLeft.canceled += instance.OnRotateLeft;
                @SnapLeft.started += instance.OnSnapLeft;
                @SnapLeft.performed += instance.OnSnapLeft;
                @SnapLeft.canceled += instance.OnSnapLeft;
                @RotateRight.started += instance.OnRotateRight;
                @RotateRight.performed += instance.OnRotateRight;
                @RotateRight.canceled += instance.OnRotateRight;
                @SnapRight.started += instance.OnSnapRight;
                @SnapRight.performed += instance.OnSnapRight;
                @SnapRight.canceled += instance.OnSnapRight;
                @SelectLeft.started += instance.OnSelectLeft;
                @SelectLeft.performed += instance.OnSelectLeft;
                @SelectLeft.canceled += instance.OnSelectLeft;
                @SelectRight.started += instance.OnSelectRight;
                @SelectRight.performed += instance.OnSelectRight;
                @SelectRight.canceled += instance.OnSelectRight;
                @ZoomIn.started += instance.OnZoomIn;
                @ZoomIn.performed += instance.OnZoomIn;
                @ZoomIn.canceled += instance.OnZoomIn;
                @ZoomOut.started += instance.OnZoomOut;
                @ZoomOut.performed += instance.OnZoomOut;
                @ZoomOut.canceled += instance.OnZoomOut;
                @Confirm.started += instance.OnConfirm;
                @Confirm.performed += instance.OnConfirm;
                @Confirm.canceled += instance.OnConfirm;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Toggle.started += instance.OnToggle;
                @Toggle.performed += instance.OnToggle;
                @Toggle.canceled += instance.OnToggle;
                @SecondaryToggle.started += instance.OnSecondaryToggle;
                @SecondaryToggle.performed += instance.OnSecondaryToggle;
                @SecondaryToggle.canceled += instance.OnSecondaryToggle;
            }
        }
    }
    public BuildAScareDirectControlActions @BuildAScareDirectControl => new BuildAScareDirectControlActions(this);

    // BuildAScare-DragAndDrop
    private readonly InputActionMap m_BuildAScareDragAndDrop;
    private IBuildAScareDragAndDropActions m_BuildAScareDragAndDropActionsCallbackInterface;
    private readonly InputAction m_BuildAScareDragAndDrop_CursorMovement;
    public struct BuildAScareDragAndDropActions
    {
        private @PlayerControls m_Wrapper;
        public BuildAScareDragAndDropActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CursorMovement => m_Wrapper.m_BuildAScareDragAndDrop_CursorMovement;
        public InputActionMap Get() { return m_Wrapper.m_BuildAScareDragAndDrop; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildAScareDragAndDropActions set) { return set.Get(); }
        public void SetCallbacks(IBuildAScareDragAndDropActions instance)
        {
            if (m_Wrapper.m_BuildAScareDragAndDropActionsCallbackInterface != null)
            {
                @CursorMovement.started -= m_Wrapper.m_BuildAScareDragAndDropActionsCallbackInterface.OnCursorMovement;
                @CursorMovement.performed -= m_Wrapper.m_BuildAScareDragAndDropActionsCallbackInterface.OnCursorMovement;
                @CursorMovement.canceled -= m_Wrapper.m_BuildAScareDragAndDropActionsCallbackInterface.OnCursorMovement;
            }
            m_Wrapper.m_BuildAScareDragAndDropActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CursorMovement.started += instance.OnCursorMovement;
                @CursorMovement.performed += instance.OnCursorMovement;
                @CursorMovement.canceled += instance.OnCursorMovement;
            }
        }
    }
    public BuildAScareDragAndDropActions @BuildAScareDragAndDrop => new BuildAScareDragAndDropActions(this);

    // Emotes
    private readonly InputActionMap m_Emotes;
    private IEmotesActions m_EmotesActionsCallbackInterface;
    private readonly InputAction m_Emotes_Emote1;
    private readonly InputAction m_Emotes_Emote2;
    private readonly InputAction m_Emotes_Emote3;
    private readonly InputAction m_Emotes_Emote4;
    public struct EmotesActions
    {
        private @PlayerControls m_Wrapper;
        public EmotesActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Emote1 => m_Wrapper.m_Emotes_Emote1;
        public InputAction @Emote2 => m_Wrapper.m_Emotes_Emote2;
        public InputAction @Emote3 => m_Wrapper.m_Emotes_Emote3;
        public InputAction @Emote4 => m_Wrapper.m_Emotes_Emote4;
        public InputActionMap Get() { return m_Wrapper.m_Emotes; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EmotesActions set) { return set.Get(); }
        public void SetCallbacks(IEmotesActions instance)
        {
            if (m_Wrapper.m_EmotesActionsCallbackInterface != null)
            {
                @Emote1.started -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote1;
                @Emote1.performed -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote1;
                @Emote1.canceled -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote1;
                @Emote2.started -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote2;
                @Emote2.performed -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote2;
                @Emote2.canceled -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote2;
                @Emote3.started -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote3;
                @Emote3.performed -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote3;
                @Emote3.canceled -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote3;
                @Emote4.started -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote4;
                @Emote4.performed -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote4;
                @Emote4.canceled -= m_Wrapper.m_EmotesActionsCallbackInterface.OnEmote4;
            }
            m_Wrapper.m_EmotesActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Emote1.started += instance.OnEmote1;
                @Emote1.performed += instance.OnEmote1;
                @Emote1.canceled += instance.OnEmote1;
                @Emote2.started += instance.OnEmote2;
                @Emote2.performed += instance.OnEmote2;
                @Emote2.canceled += instance.OnEmote2;
                @Emote3.started += instance.OnEmote3;
                @Emote3.performed += instance.OnEmote3;
                @Emote3.canceled += instance.OnEmote3;
                @Emote4.started += instance.OnEmote4;
                @Emote4.performed += instance.OnEmote4;
                @Emote4.canceled += instance.OnEmote4;
            }
        }
    }
    public EmotesActions @Emotes => new EmotesActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_AllGamepadsSchemeIndex = -1;
    public InputControlScheme AllGamepadsScheme
    {
        get
        {
            if (m_AllGamepadsSchemeIndex == -1) m_AllGamepadsSchemeIndex = asset.FindControlSchemeIndex("AllGamepads");
            return asset.controlSchemes[m_AllGamepadsSchemeIndex];
        }
    }
    public interface IStartingActionMapActions
    {
        void OnEnterGameControllerMap(InputAction.CallbackContext context);
    }
    public interface IUIControlsActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
    public interface IMonsterControlsActions
    {
        void OnLeftStick(InputAction.CallbackContext context);
        void OnRightStick(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnB(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
    }
    public interface IUINavagationActions
    {
        void OnMoveCursorGenericGamepad(InputAction.CallbackContext context);
        void OnSelectActionGenericGamepad(InputAction.CallbackContext context);
        void OnDeselectActionGenericGamepad(InputAction.CallbackContext context);
        void OnStartGameGenericGamepad(InputAction.CallbackContext context);
        void OnShowMenu(InputAction.CallbackContext context);
    }
    public interface IBuildAScareDirectControlActions
    {
        void OnPartLocomotion(InputAction.CallbackContext context);
        void OnOpenPartSelector(InputAction.CallbackContext context);
        void OnRotateLeft(InputAction.CallbackContext context);
        void OnSnapLeft(InputAction.CallbackContext context);
        void OnRotateRight(InputAction.CallbackContext context);
        void OnSnapRight(InputAction.CallbackContext context);
        void OnSelectLeft(InputAction.CallbackContext context);
        void OnSelectRight(InputAction.CallbackContext context);
        void OnZoomIn(InputAction.CallbackContext context);
        void OnZoomOut(InputAction.CallbackContext context);
        void OnConfirm(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnToggle(InputAction.CallbackContext context);
        void OnSecondaryToggle(InputAction.CallbackContext context);
    }
    public interface IBuildAScareDragAndDropActions
    {
        void OnCursorMovement(InputAction.CallbackContext context);
    }
    public interface IEmotesActions
    {
        void OnEmote1(InputAction.CallbackContext context);
        void OnEmote2(InputAction.CallbackContext context);
        void OnEmote3(InputAction.CallbackContext context);
        void OnEmote4(InputAction.CallbackContext context);
    }
}
