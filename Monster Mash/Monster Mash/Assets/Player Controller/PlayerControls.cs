//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Player Controller/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Starting Action Map"",
            ""id"": ""4e7ab292-a22f-47d2-a4fd-78a5ed880541"",
            ""actions"": [
                {
                    ""name"": ""Enter Game - Controller Map"",
                    ""type"": ""Button"",
                    ""id"": ""e2d86e18-7529-4731-bff1-715cf6012fa5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""82868def-e6a5-4e6b-8617-4ef5934675f9"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2cf1efb-e720-4788-a284-b420acc370e4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64569b79-795a-4a4d-a46d-61bf30dec751"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""744d660f-cb31-43c5-8278-2db20e2ed5ec"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""da0e2159-24f5-4b63-a6ad-85e156efdf29"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06eda489-dfde-41e6-9a32-b5e11e8f44be"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a9a5ea3-6c57-40cb-a42b-b3acea0a5eba"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92508b12-b615-42ed-96b1-6d948adb4bac"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d90722f9-fe28-482a-95e2-630fed74eb44"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00a3fce8-cb59-4a44-8ab3-16c0f5302ba5"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""AllGamepads"",
                    ""action"": ""Enter Game - Controller Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI Controls"",
            ""id"": ""a0ac660d-8f87-4828-933e-ac4af02b3e3d"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7b13cdd7-4397-4f62-b01e-2d77bad62756"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""882e4ab3-bbe2-42ee-b9ab-e4c1c2df1136"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""2e5c6021-55cb-4b9c-992c-7846b83cdc6e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d9f2c1cd-6d3d-4c61-9eed-b6270e9b5bf4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3b63101f-8df9-4e5d-9dbe-9dc1941ee114"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1d01a8b6-50b5-400e-8379-13306abe23ab"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fe4b726a-7aa5-4a6c-8197-427fb1a4c6f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f84d9437-0bbf-43db-a9ab-8684058b0ca5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fa723524-9af9-43f2-97e2-239c5f17aa8f"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""43b7aa08-7a12-427a-bc38-7c3a3123d22b"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""cecac8c8-8cf7-40c3-a3ea-b9d99d381f34"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""35408ccd-b7db-41b6-af4c-fbe6fa96fb32"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a2972e6f-81c9-48e6-9833-1c2fcbf1feea"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a8e760c7-1cd0-4f5e-a8e1-eb1ff48e4af3"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""852f561c-a0e7-463d-8022-6c39d82e5d5b"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cf9b778c-8f33-4254-8a72-cc68fadbaf57"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d9af1495-beb0-4507-a4c1-94565d856240"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""df4c18ad-19eb-4b83-84eb-f1fdda5a2c7a"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""17ab75b6-0af7-40ba-b239-e9577988a595"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""934f43f2-11de-4539-a28d-42f4e544cf40"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""786e9179-2305-4171-a8f1-7ff5fc1a9cbd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""64e77d76-d72c-4080-b81b-ddc4a803cf2d"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""38fd2d06-8e7f-4df6-8e2c-7842db658dc2"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ff5ea37f-6384-4778-89f1-9fade52f3d51"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""78833def-2db9-485e-a520-f18c4812ab51"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""8eb56af3-ba8b-4428-a335-08fb9d1fed8b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c382768f-5171-4d5e-afef-3394bb4d6ce9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""121d75ac-56df-4872-9d7e-029a3b239372"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b9fa2992-a899-4325-afeb-8337f6150932"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b6c4088a-9159-4957-a6fb-12be4a9c657c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9039e536-9d51-4ccf-a2ec-940b4dfe085e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3805d2a6-6e22-477e-a407-b0d6905b7712"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""98333df4-5d4f-47b6-9e92-dd0bf2214844"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""62a5e846-5180-4198-a662-6963ba877e9f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8b416332-99f7-4aec-92ed-bd3f80a7fb40"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9d3a7873-3197-4ae3-8262-f198781580af"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9364e866-88e9-4be5-86aa-ded896192543"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""caed3759-3a51-45d0-b209-b029ce8ca14e"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d7d6956-6176-4fb8-a2d3-fdc40760739d"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9991ecb3-12d6-4c49-ab89-09b941a90aa8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b48a60a-95ca-4fc2-a8c3-58eab8c31786"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e926df4-61e7-4b77-a2e0-a21e8eeaddbd"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4258ad0a-cd62-40a2-b9b7-bd1e8406ef20"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e05a6fc8-0adf-4fa2-99c4-18e5b0dbe46e"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b2fcf44-8cb2-4450-a025-419568f0601c"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f3a489e-0b49-4afe-9bd5-985e575fba47"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4e3bf22-7a93-4bf2-bb63-4f0efd838faf"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34401bb3-e170-486e-a30c-2e8eb4f46595"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Monster Controls"",
            ""id"": ""b44544cc-225f-4261-8c6d-b452ba0e7943"",
            ""actions"": [
                {
                    ""name"": ""Left Stick"",
                    ""type"": ""Value"",
                    ""id"": ""20d73ea1-c242-47d4-9f61-e1b8668f6fec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right Stick"",
                    ""type"": ""Value"",
                    ""id"": ""a397b105-6e4e-4480-9244-19f1a759ce1c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""StickDeadzone"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""8ca17604-be3d-4604-b3cf-55b28d679d51"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1c1efe38-c56b-4ada-bd51-4bfd5d65e748"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""595a6d63-d868-4800-a41a-663acd546da3"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8d9b5080-91f1-4eed-96b8-0bae561ec886"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7ad42e02-6f85-4390-9a29-5bdee84bf9f1"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""f0f8e462-d0c2-49e7-a456-8cbf2f72e20d"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""42ad19b4-537f-496f-bd5c-c044b87f0fcf"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dc2a17b8-0cdc-4b13-a39d-a6125b1238cb"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a265b2d3-4424-4da0-bd52-34876b55812c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""6d6838d3-a2fc-4ab4-9fdf-4d6f676c7586"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""AllGamepads"",
            ""bindingGroup"": ""AllGamepads"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Starting Action Map
        m_StartingActionMap = asset.FindActionMap("Starting Action Map", throwIfNotFound: true);
        m_StartingActionMap_EnterGameControllerMap = m_StartingActionMap.FindAction("Enter Game - Controller Map", throwIfNotFound: true);
        // UI Controls
        m_UIControls = asset.FindActionMap("UI Controls", throwIfNotFound: true);
        m_UIControls_Navigate = m_UIControls.FindAction("Navigate", throwIfNotFound: true);
        m_UIControls_Submit = m_UIControls.FindAction("Submit", throwIfNotFound: true);
        m_UIControls_Cancel = m_UIControls.FindAction("Cancel", throwIfNotFound: true);
        m_UIControls_Point = m_UIControls.FindAction("Point", throwIfNotFound: true);
        m_UIControls_Click = m_UIControls.FindAction("Click", throwIfNotFound: true);
        m_UIControls_ScrollWheel = m_UIControls.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UIControls_MiddleClick = m_UIControls.FindAction("MiddleClick", throwIfNotFound: true);
        m_UIControls_RightClick = m_UIControls.FindAction("RightClick", throwIfNotFound: true);
        m_UIControls_TrackedDevicePosition = m_UIControls.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UIControls_TrackedDeviceOrientation = m_UIControls.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        // Monster Controls
        m_MonsterControls = asset.FindActionMap("Monster Controls", throwIfNotFound: true);
        m_MonsterControls_LeftStick = m_MonsterControls.FindAction("Left Stick", throwIfNotFound: true);
        m_MonsterControls_RightStick = m_MonsterControls.FindAction("Right Stick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Starting Action Map
    private readonly InputActionMap m_StartingActionMap;
    private IStartingActionMapActions m_StartingActionMapActionsCallbackInterface;
    private readonly InputAction m_StartingActionMap_EnterGameControllerMap;
    public struct StartingActionMapActions
    {
        private @PlayerControls m_Wrapper;
        public StartingActionMapActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnterGameControllerMap => m_Wrapper.m_StartingActionMap_EnterGameControllerMap;
        public InputActionMap Get() { return m_Wrapper.m_StartingActionMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(StartingActionMapActions set) { return set.Get(); }
        public void SetCallbacks(IStartingActionMapActions instance)
        {
            if (m_Wrapper.m_StartingActionMapActionsCallbackInterface != null)
            {
                @EnterGameControllerMap.started -= m_Wrapper.m_StartingActionMapActionsCallbackInterface.OnEnterGameControllerMap;
                @EnterGameControllerMap.performed -= m_Wrapper.m_StartingActionMapActionsCallbackInterface.OnEnterGameControllerMap;
                @EnterGameControllerMap.canceled -= m_Wrapper.m_StartingActionMapActionsCallbackInterface.OnEnterGameControllerMap;
            }
            m_Wrapper.m_StartingActionMapActionsCallbackInterface = instance;
            if (instance != null)
            {
                @EnterGameControllerMap.started += instance.OnEnterGameControllerMap;
                @EnterGameControllerMap.performed += instance.OnEnterGameControllerMap;
                @EnterGameControllerMap.canceled += instance.OnEnterGameControllerMap;
            }
        }
    }
    public StartingActionMapActions @StartingActionMap => new StartingActionMapActions(this);

    // UI Controls
    private readonly InputActionMap m_UIControls;
    private IUIControlsActions m_UIControlsActionsCallbackInterface;
    private readonly InputAction m_UIControls_Navigate;
    private readonly InputAction m_UIControls_Submit;
    private readonly InputAction m_UIControls_Cancel;
    private readonly InputAction m_UIControls_Point;
    private readonly InputAction m_UIControls_Click;
    private readonly InputAction m_UIControls_ScrollWheel;
    private readonly InputAction m_UIControls_MiddleClick;
    private readonly InputAction m_UIControls_RightClick;
    private readonly InputAction m_UIControls_TrackedDevicePosition;
    private readonly InputAction m_UIControls_TrackedDeviceOrientation;
    public struct UIControlsActions
    {
        private @PlayerControls m_Wrapper;
        public UIControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UIControls_Navigate;
        public InputAction @Submit => m_Wrapper.m_UIControls_Submit;
        public InputAction @Cancel => m_Wrapper.m_UIControls_Cancel;
        public InputAction @Point => m_Wrapper.m_UIControls_Point;
        public InputAction @Click => m_Wrapper.m_UIControls_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UIControls_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UIControls_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UIControls_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UIControls_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UIControls_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UIControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIControlsActions set) { return set.Get(); }
        public void SetCallbacks(IUIControlsActions instance)
        {
            if (m_Wrapper.m_UIControlsActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIControlsActionsCallbackInterface.OnTrackedDeviceOrientation;
            }
            m_Wrapper.m_UIControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
            }
        }
    }
    public UIControlsActions @UIControls => new UIControlsActions(this);

    // Monster Controls
    private readonly InputActionMap m_MonsterControls;
    private IMonsterControlsActions m_MonsterControlsActionsCallbackInterface;
    private readonly InputAction m_MonsterControls_LeftStick;
    private readonly InputAction m_MonsterControls_RightStick;
    public struct MonsterControlsActions
    {
        private @PlayerControls m_Wrapper;
        public MonsterControlsActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftStick => m_Wrapper.m_MonsterControls_LeftStick;
        public InputAction @RightStick => m_Wrapper.m_MonsterControls_RightStick;
        public InputActionMap Get() { return m_Wrapper.m_MonsterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MonsterControlsActions set) { return set.Get(); }
        public void SetCallbacks(IMonsterControlsActions instance)
        {
            if (m_Wrapper.m_MonsterControlsActionsCallbackInterface != null)
            {
                @LeftStick.started -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnLeftStick;
                @LeftStick.performed -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnLeftStick;
                @LeftStick.canceled -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnLeftStick;
                @RightStick.started -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnRightStick;
                @RightStick.performed -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnRightStick;
                @RightStick.canceled -= m_Wrapper.m_MonsterControlsActionsCallbackInterface.OnRightStick;
            }
            m_Wrapper.m_MonsterControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftStick.started += instance.OnLeftStick;
                @LeftStick.performed += instance.OnLeftStick;
                @LeftStick.canceled += instance.OnLeftStick;
                @RightStick.started += instance.OnRightStick;
                @RightStick.performed += instance.OnRightStick;
                @RightStick.canceled += instance.OnRightStick;
            }
        }
    }
    public MonsterControlsActions @MonsterControls => new MonsterControlsActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_AllGamepadsSchemeIndex = -1;
    public InputControlScheme AllGamepadsScheme
    {
        get
        {
            if (m_AllGamepadsSchemeIndex == -1) m_AllGamepadsSchemeIndex = asset.FindControlSchemeIndex("AllGamepads");
            return asset.controlSchemes[m_AllGamepadsSchemeIndex];
        }
    }
    public interface IStartingActionMapActions
    {
        void OnEnterGameControllerMap(InputAction.CallbackContext context);
    }
    public interface IUIControlsActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
    public interface IMonsterControlsActions
    {
        void OnLeftStick(InputAction.CallbackContext context);
        void OnRightStick(InputAction.CallbackContext context);
    }
}
